// 用于存放中文语言包
export default {
  lang: {
    en: 'English',
    zh: 'Chinese',
  },
  nav: {
    home: 'Home',
    block: 'Block',
    contract: 'Contract',
    statistic: 'Static',
    resource: 'Source',
    language: 'Language',
  },
  home: {
    parent_hash: 'Parent Hash',
    Gas_price: 'Gas Price',
    Gas_fee: 'Gas Fee',
    Gas_used: 'Gas Used',
    Gas_limit: 'Gas Limit',
    and: 'and',
    hash: 'Hash',
    receipt: 'Receipt',
    trade: 'Trade',
    connect_wallet: 'Connect Wallet',
    recent_trans: 'Recent Transaction',
    disconnect_wallet: 'Disconnect',
    height: 'Height',
    latest_time: 'Latest Block Time',
    total_power: 'Total Power',
    miner: 'Miner',
    block_reward: 'Block Reward',
    average_revenue: 'Average revenue of 24h/T',
    day_output: '24h Output',
    day_messages: '24h Messages',
    accounts: 'Accounts',
    average_interval: 'Average Interval',
    price: 'Price',
    mockTip: 'The page display is Testnet data',
    unc_explorer: 'UNC SCAN Explorer',
    search: 'Account / Hash / Block',
    power_trend: 'Whole network power trend',
    hour: '24 hour',
    week: 'week',
    month: 'month',
    year: 'year',
    minute: 'minute',
    second: 'second',
    day_abbreviate: 'Day',
    hour_abbreviate: 'h',
    minute_abbreviate: 'min',
    second_abbreviate: 's',
    ago: 'ago',
    see_more: 'more',
    rate_trend: '24h basic procedure rate trend',
    eco_tour: 'Ecological',
    defi: 'DeFi',
    community: 'Community',
    wallet: 'Wallet',
    rank: 'Rank',
    name: 'Name',
    transactions: 'Transactions',
    address: 'Address',
    lock_UNC: 'Locked UNC',
    tvl: 'TVL',
    service_rank: 'Service Rank',
    effect_power: 'Effective Power',
    power_type: 'Type',
    tag: 'Tag',
    eff_power_ratio: 'Effective computing power/ratio',
    day_block_reward: '24h Block Reward',
    day_compute_efficiency: '24h Computing Efficiency',
    day_compute_increment: '24h Computing Increment',
    latest_block: 'Latest Block',
    block_id: 'Block ID',
    message: 'Message',
    reward: 'Reward',
    chain_support: 'Utility Chain Support',
    scan_profile:
      'UNCSCAN is a blockchain browser and analytics platform for the utility chain',
    contact_us: 'Contact us',
    twitter: 'Twitter',
    telegram: 'Telegram',
    mail: 'Mail',
    white_book: 'White Book',
    api_doc: 'API Document',
    dev_guide: 'Development Guide',
    product_service: 'Product Service',
    website: 'Website',
    app_mobile: 'App Mobile',
    explorer_wallet: 'Explorer Wallet',

    Miner: 'Miner',
    Type_of_computing_power: 'Type of computing power',

    Head_miner_computing_power_increment:
      'Head miner computing power increment trend',
    Change_of_service_income:
      'Change of service income of computing power provider',
    Base_rate_trend: 'Base rate trend',
    Message_type: 'Message type',
    Average_Gps_limit: 'Average Gps limit',
    Average_Gps_consumption: 'Average Gps consumption',
    Average_commission: 'Average commission',
    Total_fee_or_percentage: 'Total fee/percentage',
    Total_number_of_messages_or_proportion:
      'Total number/percentage of messages',

    high: 'Height',
    Computing_power_provider: 'Computing power provider',
    Message_list: 'Message list',
    Search_for_clients_or_miner: 'Search for clients/miner',
    message_id: 'Message ID',
    time: 'Time',
    sender: 'Sender',
    receiver: 'Receiver',
    method: 'Method',
    Amount: 'Amount',
    status: 'Status',

    chip_list: 'Chip List',
    ranking: 'Ranking',
    account_name: 'Account Name',
    balance: 'Balance',
    Balance_ratio: 'Balance ratio',
    type: 'Type',
    creation_time: 'Creation Time',
    Latest_transactions: 'Latest Transactions',

    Order_List: 'Order List',
    Order_ID: 'Order ID',
    client: 'Client',
    custodian: 'Custodian',
    File_size: 'File Size',
    Verified: 'Verified',
    Computing_power_fee: 'Computing Power Fee',
    state: 'State',

    Memory_pool_message_list: 'Memory Pool Message List',
    gas_limit: 'Gas Limit',

    Verify_and_publish_contract_source_code:
      'Verify and publish contract source code',
    Compiler_typeand_version_selection: 'Compiler type and version selection',
    Source_code_verification:
      'Source code verification provides transparency to users interacting with smart contracts. By uploading the source code, Filfox will match the compiled code with the code on the blockchain. Just like contracts, "smart contracts" should provide end users with more information about their "digital signature" and give users the opportunity to audit the code to independently verify that the code actually does what it is supposed to do.',
    Please_enter_the_contract:
      'Please enter the contract address you want to verify',
    Please_enter_address: 'Please enter address',
    Please_select_a_compiler: 'Please select a compiler version',
    Please_select_an_open: 'Please select an open source license type',
    Please_select_from: 'Please select from the list',
    I_agree_to_the_terms_of_service: 'I agree to the terms of service',
    reset: 'reset',
    View_contract_list: 'View contract list',

    UVM_overview: 'UVM Overview',
    Popular_contracts: 'Popular Contracts',
    Contract_address: 'Contract Address',
    Number_of_transactions: 'Number of transactions',
    Number_of_unique_users: 'Number of unique users',
    Gas_cost: 'Gas cost',
    Contract_name: 'Contract name',
    faucet: 'Faucet',

    gas_tour: 'Gas Tour',
    close: 'close',
  },
  blockChain: {
    block: 'Block',
    transactionList: 'Transaction List',
    block_information: 'Information',
    block_chip_list: 'Chip List',
    block_order: 'Order',
    block_memory_pool: 'Memory Pool',
    block_contract_verification: 'Contract Verification',
    chip_model: 'Model',
    chip_sn_code: 'SN Code',
    chip_computing_power_type: 'Computing Power Type',
    chip_computing_power_value: 'Computing Power Value',
    Account_ID: 'Account ID',
    whether_to_punish: ' Is slashedh',
    Expected_Block: 'Expected Block',
    Expected_Chunk: 'Expected Chunk',
    Output_Block: 'Output Block',
    Output_Chunk: 'Output Chunk',
    Pledge_amount: 'Pledge Amount',
    Computing_power: 'Computing Power',
    public_key: 'Public Key',
  },
  contract: {
    contract_UVM_statistics: 'UVM Statistics',
    contract_verified_contract: 'Verified Contract',
    contract_ecological_tour: 'Ecological Tour',
    contract_pass: 'Pass',
  },
  static: {
    static_computing_power_service_chart: 'Computing Power Service Chart',
    static_gas_ranking: 'Gas Ranking',
    static_computing_power_service_rankings: 'Computing Power Service Rankings',
  },
  source: {
    source_common_tool: 'Common Tool',
    source_knowledge_base: 'knowledge base',
  },
  footer: {
    official_community: 'Official Community',
    official_blog: 'Official Blog',
    most_used_links: 'Most Used Link',
    development_tools: 'Development Tools',
    gitHub_browser_repository: 'UNCSCAN Browser',
    official_x_address: 'X',
    learning_centre: 'Learning Centre',
    github_organization_homepage: 'Github',
    dapp_tools: 'DApp Tools',
  },
  account: 'Account',
  amount: 'Amount',
  block_hash: 'Block Hash',
  block_height: 'Block Height',
  code_hash: 'Code Hash',
  pledging: 'Pledge',
  power: 'Power',
  storage_paid_at: 'Storage Paid At',
  storage_usage: 'Storage Usage',
};
